To set up the application:
  make setup

To run the server:
  make server

To run the specs:
  make test

I did not implement any other commands or arguments for the existing commands.

Notes:
I opted to use an md5 hash for the shortened URL. I had considered using phrases or random strings but the md5 hash was the quickest to implement. It did, however, lead to some odd followup decisions, like needing to make URLs unique in the database. I figured the trade-off of shared shortened URLs across multiple users would be okay. A solution to this would be to have actual accounts, then the URLs could be unique per user.

The specs are pretty basic. There's not a lot to test because the only model that exists only really cares about one field. Testing the Urls helper handles most of the verification that lookups and insertions are tested. I could test the function that handles the hashing, but since I am using built-in functionality (:crypto from Erland, Base64 from Elixir), I can safely assume those are tested and not reimplement those tests.

As mentioned earlier, if this application were to become real I would implement better short URL generation. I would also implement optional user accounts where shortened URLs could be generated and then looked up at a later date. There is not much to the UI, but I'm sure I could make it look a little prettier with a nice banner for a header and some color on the page aside from just the submit button.

Given more time, I would also set this app up in a Docker container, toss some GitHub Actions in for CI, and maybe even set up a Kubernetes cluster to run the app.
